#%Module
# singularity

proc ModulesHelp { } {
   puts stderr "Provide a user environment suitable for running Singularity containers"
}
module-whatis "Provide a user environment suitable for running Singularity containers"

set appname singularity
set machine summit
set version 2.3.1

module unload xalt

# Unset a few variables within the container
setenv SINGULARITYENV_PYTHONSTARTUP ""
setenv SINGULARITYENV_PKG_CONFIG_PATH ""

# Inject Spectrum MPI libs using dl_intercept
setenv SINGULARITYENV_LD_AUDIT "/sw/summitdev/singularity/lib/libdl-intercept.so"
setenv SINGULARITYENV_RTLD_SUBSTITUTIONS "/sw/summitdev/singularity/rtld.sub"

# Ensure that the correct environment variables are picked up in the container
# Copies to some MPI libs in /lib64 have been added to /sw/summitdev/singularity/lib so it must be added
setenv OLCF_CONTAINER_LIBRARY_PATH "/sw/summitdev/spectrum_mpi/10.1.0.2-20161221c/gcc-4.8.5/lib:/sw/summitdev/spectrum_mpi/10.1.0.2-20161221c/gcc-4.8.5/lib/spectrum_mpi:/sw/summitdev/spectrum_mpi/10.1.0.2-20161221c/gcc-4.8.5/lib/pami_port/"

# I am not sure why this gets blown away by the container but we'll set it manually for now
setenv SINGULARITYENV_LD_PRELOAD /sw/summitdev/spectrum_mpi/10.1.0.2-20161221c/gcc-4.8.5/lib/libpami_cudahook.so

setenv SINGULARITY_MODULE_LOADED 1

#
##-- end
#

